// colorscheme retrobox light

syntax = "proto3";


package bloomberg;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
//import "google/protobuf/wrappers.proto";

// Key management
service KeyManager {
  rpc requestKey (KeyRequestId) returns (KeyResponse) {}
}

// Bloomberg API session management
service Bbg {
  rpc ping(Ping) returns (Pong) {}
  rpc pong(Pong) returns (Ping) {}
  rpc subscriptionStream(ClientID) returns (stream SubscriptionDataResponse) {} 
  rpc subscribe(SubscriptionList) returns (SubscriptionList) {}
  rpc unsubscribe(SubscriptionList) returns (SubscriptionList) {}
  rpc historicalDataRequest (HistoricalDataRequest) returns (HistoricalDataResponse) {}
  //rpc intradayTickRequest. maybe "tick" or "gblpTick"
  //rpc intradayBarRequest maybe "bar"
  //rpc historicalDataRequest "daily"
  //rpc referenceDataRequest "ref"
}


/////////////// Common  /////////////////

message ClientID {
  string name = 1;
}

/////////////// Subscription /////////////////


message Topic {
  enum topicType {
    UNKNOWN = 0;
    TICKER = 1;
    SEDOL1 = 2;
    CUSIP = 3;
  }
  string name = 1;
  topicType type = 2; 
  string field = 3;
  int32 interval = 4;
  bool validated = 5;
  bool terminated = 6;
}

message SubscriptionList {
  ClientID cid = 1;
  repeated Topic topics = 2;
}

message SubscriptionDataResponse {
  string msgtype = 1;
  string topic = 2;                          
  google.protobuf.Timestamp timestamp = 3;   
  repeated SubFieldData fields = 4;
  bool validated = 5;
  bool terminated = 6;

}

message SubFieldData {
  string field = 1;
  google.protobuf.Value value = 2;
}



/////////////// Historical data //////////////////

message HistoricalDataRequest {
  ClientID cid = 1;
  repeated string topics = 2; // securities
  repeated string fields = 3; // fields list
  google.protobuf.Timestamp start = 4; // startDate
  google.protobuf.Timestamp end = 5; // endDate
  map <string, string> options = 6; // overrides
}


// The top-level response message
message HistoricalDataResponse {
    // An array of items, each containing security data
    repeated HistoricalDataResponseItem items = 1;
}

// Each item contains security data
message HistoricalDataResponseItem {
    SecurityData security_data = 1; // Required
}

// Security data for a security
message SecurityData {
    string security = 1; // Required
    repeated google.protobuf.Any eid_data = 2; // Required; items unspecified
    int32 sequence_number = 3; // Required
    repeated google.protobuf.Any field_exceptions = 4; // Required; items unspecified
    repeated FieldData field_data = 5; // Required
}

// Field data for a date

message FieldData {
    google.protobuf.Timestamp date = 1; // Required
    map<string, google.protobuf.Value> fields = 2; // Dynamic fields
}


/////////////// Key management //////////////////

message KeyRequestId {
  string id = 1;
}

message KeyResponse {
  bytes key = 1;
  bytes cert = 2;
  bytes cacert = 3;
}

///////////// ping pong //////////////////

message Ping
{
  ClientID cid = 1;
  google.protobuf.Timestamp timestamp = 2;
}

message Pong
{
  ClientID cid = 1;
  google.protobuf.Timestamp timestamp = 2;
}



